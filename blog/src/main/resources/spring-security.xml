<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
		<constructor-arg>
			<list>
				<security:filter-chain pattern="/api/**"
					filters="
		securityContextPersistenceFilter,
		anonymousAuthenticationFilter,
        basicAuthenticationFilter,
        exceptionFilter" />
				<security:filter-chain pattern="/**"
					filters="
        securityContextPersistenceFilter,
        exceptionFilter" />
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="anonymousAuthenticationFilter" class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
		<constructor-arg value="anonymous_%487"/>
	</bean>
	
	<!-- Filter security interceptor start 
	<bean id="filterSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="providerManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="securityMetadataSource">
			<security:filter-security-metadata-source>
				<security:intercept-url pattern="/secure/super/**"
					access="ROLE_SUPER" />
				<security:intercept-url pattern="/secure/**"
					access="ROLE_COMMON" />
			</security:filter-security-metadata-source>
		</property>
	</bean>-->

	<bean id="providerManager"
		class="org.springframework.security.authentication.ProviderManager">
		<constructor-arg>
			<list>
				<ref bean="daoAuthenticationProvider" />
				<ref bean="anonymousAuthenticationProvider"/>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="anonymousAuthenticationProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
		<constructor-arg value="anonymous_%487"/>
	</bean>
	
	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="memberUserDetailsService" />
	</bean>

	<bean id="memberUserDetailsService"
		class="com.thinkerwolf.blog.security.service.MemberUserDetailsService"></bean>

	<bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter">
				</bean>
			</list>
		</constructor-arg>
	</bean>

	<!-- Filter security interceptor end -->

	<!-- ExceptionTranslationFilter start -->
	<bean id="exceptionFilter"
		class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<constructor-arg ref="authenticationEntryPoint">
		</constructor-arg>
		<property name="accessDeniedHandler" ref="accessDeniedHandler" />
	</bean>

	<bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<constructor-arg value="/login.html" />
	</bean>

	<bean id="accessDeniedHandler"
		class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<property name="errorPage" value="/error/accessDenied.html" />
	</bean>
	<!-- ExceptionTranslationFilter end -->

	<!-- 用来持久化和删除SecurityContext -->
	<bean id="securityContextPersistenceFilter"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter"></bean>

	<!-- 基本授权校验 -->
	<bean id="basicAuthenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<property name="authenticationManager" ref="providerManager" />
		<property name="filterProcessesUrl" value="/login" />
		<property name="rememberMeServices" ref="rememberMeServices"></property>
	</bean>

	<bean id="rememberMeServices"
		class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<constructor-arg value="remember-me" />
		<constructor-arg ref="memberUserDetailsService" />
	</bean>


</beans>
